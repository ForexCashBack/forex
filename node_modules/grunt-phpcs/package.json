{
  "name": "grunt-phpcs",
  "description": "Grunt plugin for running PHP Code Sniffer.",
  "homepage": "https://github.com/SaschaGalley/grunt-phpcs",
  "author": {
    "name": "Sascha Galley",
    "email": "me@xash.at",
    "url": "http://xash.at/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/SaschaGalley/grunt-phpcs.git"
  },
  "contributors": [
    {
      "name": "James Cryer",
      "email": "chat@jamescryer.com",
      "url": "http://www.jamescryer.com/"
    }
  ],
  "version": "0.2.2",
  "main": "Gruntfile.js",
  "engines": {
    "node": "0.10.x"
  },
  "scripts": {
    "test": "grunt"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "0.6.0",
    "grunt": "0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "phpunit"
  ],
  "readme": "# grunt-phpcs\n\n> Grunt plugin for running PHP Code Sniffer.\n\n_This plugin is developed for Grunt `0.4.0` and is not tested for backward compatibility with Grunt `0.3.x`._\n\n##Getting Started\n1. Install this grunt plugin with the following command:\n\n\t```shell\n\tnpm install grunt-phpcs --save-dev\n\t```\n\n\n2. [Install PHP Code Sniffer](https://github.com/squizlabs/PHP_CodeSniffer#installation) (preferably with [composer](https://github.com/composer/composer))\n3. Add this to your project's `Gruntfile.js` gruntfile:\n\n\t```js\n\tgrunt.loadNpmTasks('grunt-phpcs');\n\t```\n\n\n##PHP Code Sniffer task\n_Run this task with the `grunt phpcs` command._\n\n_This task is a [multi task][] so any targets, files and options should be specified according to the [multi task][] documentation._\n\n[multi task]: https://github.com/gruntjs/grunt/wiki/Configuring-tasks\n\n\n###Usage Example\n\n```js\nphpcs: {\n\tapplication: {\n\t\tdir: ['application/classes/*.php', application/lib/**/*.php]\n\t},\n\toptions: {\n\t\tbin: 'vendor/bin/phpcs',\n\t\tstandard: 'Zend'\n\t}\n}\n```\n\n###Target Properties\n####dir\nType: `Array`\n\nGlobbing pattern where phpcs should search for files.\n\n###Options\n####bin\nType: `String`  Default: `'phpcs'`\n\n####ignoreExitCode\nType: `Boolean` Default: `false`\n\n####maxBuffer\nType: `Number` Default: `200*1024`\n\nSet the buffer size.\n\n####verbose\nType: `Boolean` Default: `false`\n\nOutput more verbose information. This option can also be set by running the task with `--verbose`.\n\n####extensions\nType: `String` Default: `false`\n\nA comma separated list of file extensions to check. This option can also be set by running the task with `--extensions=<extensions>`.\n\n####ignore\nType: `String` Default: `false`\n\nA comma separated list of patterns to ignore files and directories. This option can also be set by running the task with `--ignore=<ignore>`.\n\n####severity\nType: `Integer` Default: `false`\n\nThe minimum severity required to display an error or warning. This option can also be set by running the task with `--severity=<severity>`.\n\n####warningSeverity\nType: `Integer` Default: `false`\n\nThe minimum severity required to display a warning. This option can also be set by running the task with `--warningSeverity=<severity>`.\n\n####errorSeverity\nType: `Integer` Default: `false`\n\nThe minimum severity required to display an error. This option can also be set by running the task with `--errorSeverity=<severity>`.\n\n####standard\nType: `String`  Default: `false`\nDefine the standard to use. This option can also be set by running the task with `--standard=<standard>`.\n\n####report\nType: `String` Default: `false`\n\nReport types and options\n\n####reportFile\nType: `String` Default: `false`\n\nLog report to the file. This option can also be set by running the task with `--report-file`.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/SaschaGalley/grunt-phpcs/issues"
  },
  "_id": "grunt-phpcs@0.2.2",
  "_from": "grunt-phpcs@"
}
